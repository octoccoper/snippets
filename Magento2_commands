1) Deploying project

rm -rf var/cache/* var/page_cache/* var/view_preprocessed/* var/tmp/* generated/* pub/static/* ; php bin/magento setup:upgrade ; php bin/magento setup:di:compile ; php bin/magento indexer:reindex ; php bin/magento setup:static-content:deploy -f en_US de_DE


2) Create / Update new admin user

UPDATE admin_user SET `password` = SHA2('NewPassword', 256) WHERE `username`='admin';
or
create:
php bin/magento admin:user:create --admin-user="admin2" --admin-password="Admin123" --admin-email="admin@gmail.com" --admin-firstname="Admin2" --admin-lastname="Admin2"

3) Basic permissions setup

Set Magento Permissions:

cd <your Magento install dir> 

find . -type f -exec chmod 664 {} \;

find . -type d -exec chmod 775 {} \;

find ./var -type d -exec chmod 777 {} \;

find ./pub/media -type d -exec chmod 777 {} \;

find ./pub/static -type d -exec chmod 777 {} \;

chmod 777 ./app/etc

chmod 644 ./app/etc/*.xml

chown -R owner:group . (including the last point dot, sets owner for all files under current Magento 2 installation) - Make sure you replace <owner>:<group> with your current user and the group that it's in. The most common ones are www-data:www-data, root:root, www-data:magento, etc however this can differ from server to server. 

chmod u+x bin/magento (add the execute permissions for bin/magento)  

4) backup: # mysqldump -u user -p[user_password] [database_name] | gzip > dumpfilename.sql.gz


5) create site archive:

tar -cvzf site.tar.gz * --exclude='app/etc/local.xml' --exclude='media'

6) list of command shortcuts:

Setup upgrade:

php bin/magento s:up

Cache Flush:

php bin/magento c:f

Disable Cache:

php bin/magento c:d

Enable Cache:

​​​​​​php bin/magento c:e

Static Content Deploy:

php bin/magento s:s:d

Di Compile:

php bin/magento s:d:c

Var clean folder:

php bin/magento v:c

Uninstall Magento application:

php bin/magento s:un

Runs cron job scheduled for setup application:

php bin/magento s:c:r

Disables specified modules:

php bin/magento mo:d CompanyName_ModuleName

Enables specified modules:

php bin/magento mo:e CompanyName_ModuleName

Displays status of modules:

php bin/magento mo:s

Uninstalls modules installed by composer (which only installed by composer):

php bin/magento mo:u CompanyName_ModuleName

Cleans cache type(s):

php bin/magento c:c

Disables cache type(s):

php bin/magento c:d

Enables cache type(s):

php bin/magento c:e

Flushes cache storage used by cache type(s):

php bin/magento c:f

Checks cache status:

php bin/magento c:s

Enable Maintenance Mode Using Command Line:

php bin/magento ma:e

Disable Maintenance Mode Using Command Line:

php bin/magento ma:d

Shows allowed Indexers:

php bin/magento i:i

Reindexes Data:

php bin/magento i:rei

Resets indexer status to invalid:

php bin/magento i:res

Sets index mode type:

php bin/magento i:res

Shows status of Indexer:

php bin/magento i:st
